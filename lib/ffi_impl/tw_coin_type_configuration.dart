// AUTO GENERATED FILE, DO NOT EDIT.
//
// Generated by `package:ffigen`.
import 'dart:ffi' as ffi;

/// trust wallet core
class TWCoinTypeConfiguration_1 {
  /// Holds the symbol lookup function.
  final ffi.Pointer<T> Function<T extends ffi.NativeType>(String symbolName)
      _lookup;

  /// The symbols are looked up in [dynamicLibrary].
  TWCoinTypeConfiguration_1(ffi.DynamicLibrary dynamicLibrary)
      : _lookup = dynamicLibrary.lookup;

  /// The symbols are looked up with [lookup].
  TWCoinTypeConfiguration_1.fromLookup(
      ffi.Pointer<T> Function<T extends ffi.NativeType>(String symbolName)
          lookup)
      : _lookup = lookup;

  late final ffi.Pointer<ffi.Int32> _TW_EXPORT_STRUCT =
      _lookup<ffi.Int32>('TW_EXPORT_STRUCT');

  int get TW_EXPORT_STRUCT => _TW_EXPORT_STRUCT.value;

  set TW_EXPORT_STRUCT(int value) => _TW_EXPORT_STRUCT.value = value;

  /// Returns stock symbol of coin
  late final ffi.Pointer<ffi.Int32> _TWString = _lookup<ffi.Int32>('TWString');

  int get TWString => _TWString.value;

  set TWString(int value) => _TWString.value = value;

  /// Returns max count decimal places for minimal coin unit
  int TWCoinTypeConfigurationGetDecimals(
    int type,
  ) {
    return _TWCoinTypeConfigurationGetDecimals(
      type,
    );
  }

  late final _TWCoinTypeConfigurationGetDecimals_ptr =
      _lookup<ffi.NativeFunction<_c_TWCoinTypeConfigurationGetDecimals>>(
          'TWCoinTypeConfigurationGetDecimals');
  late final _dart_TWCoinTypeConfigurationGetDecimals
      _TWCoinTypeConfigurationGetDecimals =
      _TWCoinTypeConfigurationGetDecimals_ptr.asFunction<
          _dart_TWCoinTypeConfigurationGetDecimals>();
}

class TWCoinTypeConfiguration extends ffi.Struct {
  @ffi.Int32()
  external int unused;
}

typedef _c_TWCoinTypeConfigurationGetDecimals = ffi.Int32 Function(
  ffi.Int32 type,
);

typedef _dart_TWCoinTypeConfigurationGetDecimals = int Function(
  int type,
);

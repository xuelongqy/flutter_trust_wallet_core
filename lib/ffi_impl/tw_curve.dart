// AUTO GENERATED FILE, DO NOT EDIT.
//
// Generated by `package:ffigen`.
import 'dart:ffi' as ffi;

/// trust wallet core
class TWCurve_1 {
  /// Holds the symbol lookup function.
  final ffi.Pointer<T> Function<T extends ffi.NativeType>(String symbolName)
      _lookup;

  /// The symbols are looked up in [dynamicLibrary].
  TWCurve_1(ffi.DynamicLibrary dynamicLibrary)
      : _lookup = dynamicLibrary.lookup;

  /// The symbols are looked up with [lookup].
  TWCurve_1.fromLookup(
      ffi.Pointer<T> Function<T extends ffi.NativeType>(String symbolName)
          lookup)
      : _lookup = lookup;

  /// Elliptic cruves
  int TW_EXPORT_ENUM() {
    return _TW_EXPORT_ENUM();
  }

  late final _TW_EXPORT_ENUM_ptr =
      _lookup<ffi.NativeFunction<_c_TW_EXPORT_ENUM>>('TW_EXPORT_ENUM');
  late final _dart_TW_EXPORT_ENUM _TW_EXPORT_ENUM =
      _TW_EXPORT_ENUM_ptr.asFunction<_dart_TW_EXPORT_ENUM>();
}

abstract class TWCurve {
  static const int TWCurveSECP256k1 = 0;
  static const int TWCurveED25519 = 1;
  static const int TWCurveED25519Blake2bNano = 2;
  static const int TWCurveCurve25519 = 3;
  static const int TWCurveNIST256p1 = 4;
  static const int TWCurveED25519Extended = 5;
  static const int TWCurveNone = 6;
}

typedef _c_TW_EXPORT_ENUM = ffi.Int32 Function();

typedef _dart_TW_EXPORT_ENUM = int Function();
